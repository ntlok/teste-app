{"version":3,"file":"static/js/944.33a5eff7.chunk.js","mappings":"2IAAO,IAAMA,EAAM,CACjBC,KAAM,kB,wGCWKC,EAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,SACAC,EAFkB,EAElBA,YACAC,EAHkB,EAGlBA,SACAC,EAJkB,EAIlBA,QACAC,EALkB,EAKlBA,SACAC,EANkB,EAMlBA,MANkB,OAQlB,UAAC,KAAD,YACE,UAAC,KAAD,CAAQC,aAAcT,EAAAA,EAAAA,KAAUU,cAAa,UAAKV,EAAAA,EAAAA,KAAL,SAA7C,WACE,iBAAMC,KAAK,cAAcU,QAASP,IACjCG,IAAY,iBAAMN,KAAK,WAAWU,QAASJ,KAC5C,2BAAQC,IACPH,MAEH,SAAC,IAAD,CAAiBC,QAASA,EAASM,KAAK,OAAOC,IAAI,OAAnD,SACGV,S,8KCnBMW,EAAb,WAKE,WAAYC,EAAeC,IAAc,oBAJzCD,WAIwC,OAFxCC,QAEwC,EACtCC,KAAKF,MAAQA,EACTC,IAAIC,KAAKD,GAAKA,GAGlBE,OAAOC,iBAAiBF,KAAM,CAC5BG,QAAS,CAAEC,YAAY,EAAOC,MAAO,GAAIC,UAAU,KAXzD,mCAeE,WAA+B,IAAD,OAC5B,OAAOC,EAAGC,YAAY,YAAaD,EAAGE,MAAM,YAArC,iBAAiD,8GAChDF,EAAGJ,eAD6C,aAChD,EAAYO,IAAI,GADgC,gDAhB5D,KCUaH,EAAK,IAfZI,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAGJ,aAAe,IAAD,2BACZ,cAAM,kBAHRR,aAEc,EAIZ,EAAKS,QAAQ,GAAGC,OAAO,CACrBV,QAAS,SAGX,YAAKA,eAAL,SAAcW,WAAWjB,GARb,EASb,iBAZGc,CAAiBI,EAAAA,U,mBCCVC,EAAO,WAClB,MCFwB,WAIpB,IAAD,EACGb,EAAO,WAAGc,EAAAA,EAAAA,eAAa,kCAAMV,EAAGJ,eAAT,aAAM,EAAYe,IAAI,aAAtC,QAA6C,CAAEpB,MAAO,GAEnE,MAAO,CACLK,QAAAA,EACAgB,qBAAqB,WAAD,wBAAE,8EACpB,IAAItB,EAAQM,EAAQL,MAAQ,EAAG,GAAGsB,OADd,2CAAF,kDAAC,GAGrBC,qBAAqB,WAAD,wBAAE,8EACpB,IAAIxB,EAAQM,EAAQL,MAAQ,EAAG,GAAGsB,OADd,2CAAF,kDAAC,IDVyCE,GAAxDnB,EAAR,EAAQA,QAASgB,EAAjB,EAAiBA,qBAAsBE,EAAvC,EAAuCA,qBACvC,GAA6EE,EAAAA,EAAAA,MAA5DC,EAAjB,EAAQrB,QAAkCsB,EAA1C,EAAoBN,qBAAiDO,EAArE,EAA+CL,qBACzCM,EAAW,OAEjB,OACE,UAAC1C,EAAA,EAAD,CAAME,YAAawC,EAAUrC,SAAUqC,EAAUpC,MAAOoC,EAAxD,WACE,sDAA8BxB,EAAQL,UACtC,yCAAiB0B,EAAE1B,UACnB,mBACE8B,QAAS,WACPT,IACAM,KAEFI,KAAK,SALP,gBASA,mBACED,QAAS,WACPP,IACAK,KAEFG,KAAK,SALP","sources":["common/constants.ts","components/Page/Page.tsx","database/counter/Counter.ts","database/index.ts","pages/Home/Home.tsx","database/counter/index.ts"],"sourcesContent":["export const app = {\n  name: 'React Starter',\n};\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { app } from '../../common/constants';\nimport { LayoutContainer, LayoutContainerProps } from '../LayoutContainer/LayoutContainer';\n\ninterface PageProps extends LayoutContainerProps {\n  description: string;\n  elements?: ReactNode;\n  keywords?: string;\n  title: string;\n}\n\nexport const Page = ({\n  children,\n  description,\n  elements,\n  isFluid,\n  keywords,\n  title,\n}: PropsWithChildren<PageProps>): JSX.Element => (\n  <HelmetProvider>\n    <Helmet defaultTitle={app.name} titleTemplate={`${app.name} | %s`}>\n      <meta name=\"description\" content={description} />\n      {keywords && <meta name=\"keywords\" content={keywords} />}\n      <title>{title}</title>\n      {elements}\n    </Helmet>\n    <LayoutContainer isFluid={isFluid} role=\"main\" Tag=\"main\">\n      {children}\n    </LayoutContainer>\n  </HelmetProvider>\n);\n","import { PromiseExtended } from 'dexie';\n// eslint-disable-next-line import/no-cycle\nimport { db } from '..';\n\nexport interface ICounter {\n  count: number;\n  id?: number;\n}\n\nexport class Counter implements ICounter {\n  count: number;\n\n  id: number | undefined;\n\n  constructor(count: number, id?: number) {\n    this.count = count;\n    if (id) this.id = id;\n\n    // Non-enumerable will prevent data from being handled by indexedDB when doing put() or add().\n    Object.defineProperties(this, {\n      counter: { enumerable: false, value: [], writable: true },\n    });\n  }\n\n  save(): PromiseExtended<void> {\n    return db.transaction('readwrite', db.table('counter'), async () => {\n      await db.counter?.put(this);\n    });\n  }\n}\n","import Dexie from 'dexie';\n// eslint-disable-next-line import/no-cycle\nimport { Counter, ICounter } from './counter/Counter';\n\nclass Database extends Dexie {\n  counter: Dexie.Table<ICounter, number> | undefined;\n\n  constructor() {\n    super('react_starter');\n\n    // Define tables and indexes. Implicit table props are dynamically created here.\n    this.version(1).stores({\n      counter: '++id',\n    });\n\n    this.counter?.mapToClass(Counter);\n  }\n}\n\nexport const db = new Database();\n","import React from 'react';\nimport { Page } from '../../components/Page/Page';\nimport { useCounter } from '../../database/counter';\nimport { useCounter as useCounterRedux } from '../../store/counter';\n\nexport const Home = (): JSX.Element => {\n  const { counter, handleDecrementClick, handleIncrementClick } = useCounter();\n  const { counter: c, handleDecrementClick: hDC, handleIncrementClick: hIC } = useCounterRedux();\n  const homeText = 'Home';\n\n  return (\n    <Page description={homeText} keywords={homeText} title={homeText}>\n      <p>Dexie Count (Persistent): {counter.count}</p>\n      <p>Redux Count: {c.count}</p>\n      <button\n        onClick={() => {\n          handleDecrementClick();\n          hDC();\n        }}\n        type=\"button\"\n      >\n        -\n      </button>\n      <button\n        onClick={() => {\n          handleIncrementClick();\n          hIC();\n        }}\n        type=\"button\"\n      >\n        +\n      </button>\n    </Page>\n  );\n};\n","import { useLiveQuery } from 'dexie-react-hooks';\nimport { db } from '..';\nimport { Counter, ICounter } from './Counter';\n\nexport const useCounter = (): {\n  counter: ICounter;\n  handleDecrementClick: () => void;\n  handleIncrementClick: () => void;\n} => {\n  const counter = useLiveQuery(() => db.counter?.get(1)) ?? { count: 0 };\n\n  return {\n    counter,\n    handleDecrementClick: async () => {\n      new Counter(counter.count - 1, 1).save();\n    },\n    handleIncrementClick: async () => {\n      new Counter(counter.count + 1, 1).save();\n    },\n  };\n};\n"],"names":["app","name","Page","children","description","elements","isFluid","keywords","title","defaultTitle","titleTemplate","content","role","Tag","Counter","count","id","this","Object","defineProperties","counter","enumerable","value","writable","db","transaction","table","put","Database","version","stores","mapToClass","Dexie","Home","useLiveQuery","get","handleDecrementClick","save","handleIncrementClick","useCounter","useCounterRedux","c","hDC","hIC","homeText","onClick","type"],"sourceRoot":""}